name: .NET

on:
  push:
    tags:
    - v*
    branches: [ main ]
  pull_request:
    branches: [ main,  feature/* ]
   
jobs:
  build:

    env:    
      APP: ${{ github.workspace }}/app
      PROJECT_SLN: '.\app\Spinner.sln'
      PROJECT_SPINNER: '.\app\Spinner\'
      PROJECT_TEST: './app/Spinner.Test/Spinner.Test.csproj'

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['5.0.x']

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core SDK ${{ matrix.dotnet-version }} üîß
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Setup NuGet üîß
      uses: NuGet/setup-nuget@v1.0.5
    # - name: Three
    #   run: |
    #         sudo apt-get install tree && tree $GITHUB_WORKSPACE

    - name: Get Build Version üè∑Ô∏è
      run: |
        Import-Module .\nupkgs\GetBuildVersion.psm1
        Write-Host $Env:GITHUB_REF
        $version = GetBuildVersion -VersionString $Env:GITHUB_REF
        echo "BUILD_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      shell: pwsh

    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner

    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      run: dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
    
    - name: Restore Dependencies üì¶
      run: dotnet restore $PROJECT_SLN
    
    - name: Build ‚öôÔ∏è
      run: dotnet build $PROJECT_SLN -c Release -p:Version=$BUILD_VERSION --no-restore
    
    # - name: Test üß™
    #   run: dotnet test $PROJECT_SLN --configuration Release --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$GITHUB_WORKSPACE/Coverage

    - name: Test and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}      
      run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"SpinnerAlloc_Spinner" /o:"75a7e136-8734-4321-b0ed-b8fda8766c32" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          # dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover -l trx
          dotnet test ./app/Spinner.sln --configuration Release --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=opencover -l trx
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
              
    - name: Publish Package ‚úâÔ∏è     
      if: startsWith(github.ref, 'refs/tags/v')
      run: nuget push **\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_TOKEN}}
