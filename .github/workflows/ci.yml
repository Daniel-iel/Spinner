name: .NET

on:
  push:
    tags:
    - v*
    branches: [ main ]
  pull_request:
    branches: [ main, feature/* ]
   
jobs:
  build:

    env:    
      APP: '${{ github.workspace }}/app'
      PROJECT_SLN: './app/Spinner.sln'
      PROJECT_BIN3: './app/Spinner/bin/Release/netcoreapp3'
      PROJECT_BIN3.1: './app/Spinner/bin/Release/netcoreapp3.1'
      PROJECT_BIN5: './app/Spinner/bin/Release/net5.0'

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['5.0.x']

    steps:
    - uses: actions/checkout@v2

    - name: Get Build Version üè∑Ô∏è
      run: |
        Import-Module .\nupkgs\GetBuildVersion.psm1
        Write-Host $Env:GITHUB_REF
        $version = GetBuildVersion -VersionString $Env:GITHUB_REF
        echo "BUILD_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      shell: pwsh

    - name: Setup NuGet üîß
      uses: NuGet/setup-nuget@v1.0.5

    - name: Setup .NET Core SDK ${{ matrix.dotnet-version }} üîß
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Restore Dependencies üì¶
      run: dotnet restore $PROJECT_SLN

    - name: Build ‚öôÔ∏è
      run: dotnet build $PROJECT_SLN -c Release -p:Version=$BUILD_VERSION --no-restore

    - name: Test üß™
      run: dotnet test $PROJECT_SLN --configuration Release --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=$GITHUB_WORKSPACE/Coverage

    - name: Run Infer .Net 3.0
      uses: microsoft/infersharpaction@v1.2
      with:
        binary-path: ${{ env.PROJECT_BIN3 }}

    - name: Codecov      
      uses: codecov/codecov-action@v2.1.0
      with:        
        token: ${{secrets.CODCOV_TOKEN}}        
        directory: $GITHUB_WORKSPACE/Coverage        
        file: coverage.opencover.xml
        
    - name: Publish Package ‚úâÔ∏è     
      if: startsWith(github.ref, 'refs/tags/v')
      run: nuget push **\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_TOKEN}}
