"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[211],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(r),f=i,m=u["".concat(s,".").concat(f)]||u[f]||y[f]||o;return r?n.createElement(m,a(a({ref:t},l),{},{components:r})):n.createElement(m,a({ref:t},l))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=f;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:i,a[1]=p;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},564:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>y,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var n=r(7462),i=(r(7294),r(3905));const o={sidebar_position:4},a="Type Parser",p={unversionedId:"mapping-string-into-type",id:"mapping-string-into-type",title:"Type Parser",description:"If you require extracting positional strings and converting the values into their final forms, such as obtaining a string representing a datetime or currency, you can create an interceptor reader by implementing the ITypeParser interface. This allows you to perform custom actions before the value is set to the final property.",source:"@site/docs/mapping-string-into-type.md",sourceDirName:".",slug:"/mapping-string-into-type",permalink:"/Spinner/docs/mapping-string-into-type",draft:!1,editUrl:"https://github.com/Daniel-iel/Spinner/docs/mapping-string-into-type.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Read String",permalink:"/Spinner/docs/mapping-string-in-object"}},s={},c=[],l={toc:c},u="wrapper";function y(e){let{components:t,...r}=e;return(0,i.kt)(u,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"type-parser"},"Type Parser"),(0,i.kt)("p",null,"If you require extracting positional strings and converting the values into their final forms, such as obtaining a string representing a datetime or currency, you can create an interceptor reader by implementing the ",(0,i.kt)("inlineCode",{parentName:"p"},"ITypeParser")," interface. This allows you to perform custom actions before the value is set to the final property."),(0,i.kt)("p",null,"here and example of intercept the property read."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'\n    public class ParserWebSite : ITypeParser\n    {\n        public object Parser(object propertyValue)\n        {\n            return $"WebSite: {propertyValue.ToString()}";\n        }\n    }\n        \n    [ReadProperty(start: 9, length: 20, type: typeof(ParserWebSite))]\n    \n')))}y.isMDXComponent=!0}}]);