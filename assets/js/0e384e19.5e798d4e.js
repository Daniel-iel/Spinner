"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[671],{9881:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return l},toc:function(){return g},default:function(){return c}});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),s=["components"],p={sidebar_position:1},o="Tutorial Intro",l={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"Tutorial Intro",description:"Let's discover Spinner in less than 5 minutes.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",editUrl:"https://github.com/SpinnerAlloc/Spinner/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar"},g=[{value:"Getting Started",id:"getting-started",children:[],level:2},{value:"Installing Spinner package",id:"installing-spinner-package",children:[],level:2},{value:"Mapping your model",id:"mapping-your-model",children:[],level:2},{value:"Using spinner",id:"using-spinner",children:[],level:2}],u={toc:g};function c(n){var e=n.components,t=(0,i.Z)(n,s);return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"tutorial-intro"},"Tutorial Intro"),(0,a.kt)("p",null,"Let's discover ",(0,a.kt)("strong",{parentName:"p"},"Spinner in less than 5 minutes"),"."),(0,a.kt)("h2",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,"Get started by ",(0,a.kt)("strong",{parentName:"p"},"configuring you project"),"."),(0,a.kt)("h2",{id:"installing-spinner-package"},"Installing Spinner package"),(0,a.kt)("p",null,"To install spinner in your project using ",(0,a.kt)("strong",{parentName:"p"},"Nuget Package"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"dotnet add package Spinner\n")),(0,a.kt)("h2",{id:"mapping-your-model"},"Mapping your model"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"[ObjectMapper(lenght: 50)]\npublic struct Nothing\n{\n  public Nothing(string name, string site)\n  {\n    this.Name = name;\n    this.Site = site;\n  }\n  \n  [WriteProperty(lenght: 20, order: 1, paddingChar: ' ')]\n  public string Name { get; private set; }\n  \n  [WriteProperty(lenght: 30, order: 2, paddingChar: ' ')]\n  public string Site { get; private set; }\n}\n")),(0,a.kt)("p",null,"The sum ",(0,a.kt)("inlineCode",{parentName:"p"},"length")," of all mapped property should not be more than ObjectMapper ",(0,a.kt)("inlineCode",{parentName:"p"},"length"),"."),(0,a.kt)("h2",{id:"using-spinner"},"Using spinner"),(0,a.kt)("p",null,"Run ",(0,a.kt)("strong",{parentName:"p"},"WriteAsString")," to get mapped object as string or call ",(0,a.kt)("strong",{parentName:"p"},"WriteAsSpan")," to get the result as span:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},' var nothing = new Nothing("spinner", "www.spinner.com.br");\n var spinner = new Spinner<Nothing>(nothing);\n var stringResponse = spinner.WriteAsString();   \n //stringresponse = "              spinner            www.spinner.com.br"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},' var nothing = new Nothing("spinner", "www.spinner.com.br");\n var spinner = new Spinner<Nothing>(nothing);\n var spanResponse = spinner.WriteAsSpan();   \n //spanResponse = "              spinner            www.spinner.com.br"\n')))}c.isMDXComponent=!0}}]);